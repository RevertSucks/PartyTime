-- This file was generated using Luraph Obfuscator v13.5.4

return(function(dl,Dl,zl,xl,il,pl,ol,Yl,ml,Ul,Kl,Cl,Hl,rl,Xl,Nl,Il,gl,fl,el,Vl,Zl,bl,ul,sl,al,kl,wl,...)local t=(select);local nl,Q,a=0X0000,nil,nil;while 1550659841 do if nl~=0x000 then a=4294967296;break;else do Q=gl;end;nl=0x1;end;end;local J=pcall;local Ll=function(...)return t(Zl,...),{...};end;nl=2;local Pl,j,R,W,F=nil,nil,nil,nil,nil;do while nl<5 do do if nl<=0X1 then if nl==0X0 then do F=rl;end;do nl=0X005;end;do continue;end;else do R=Dl;end;nl=3;end;else do if not(nl<=2)then do if nl~=0X003 then j=bit32.band;do nl=0x0001;end;else W={0X00003,5,2};nl=0X0;continue;end;end;else Pl=0X0001;nl=0x4;end;end;end;end;end;end;local G=string.sub;local g=string.char;local S,P,D=nil,nil,nil;for Lq=0X0,2 do do if Lq<=0X0 then S=wl;else if Lq==1 then P=fl;continue;else D=Hl;continue;end;end;end;end;local w=Ul;local L=(tonumber);do nl=0X1;end;local H,Z,x,N=nil,nil,nil,(nil);repeat do if nl<=0X1 then if nl==0 then N=bl;nl=4;continue;else H=Kl;nl=2;end;else if nl==2 then Z=Nl;do nl=0X03;end;continue;else do x=0X1;end;nl=0X000;do continue;end;end;end;end;until nl>3;local b=(ol);local s=a-0x1;local o=unpack;nl=0X00000;local p,z,y=nil,nil,nil;do while nl<=0X2 do if not(nl<=0)then if nl==1 then y=Cl;nl=3;else z=p();do nl=1;end;continue;end;else p=Vl;nl=0X2;end;end;end;local f=setmetatable;do nl=0X01;end;local m=(nil);repeat if nl==0X0 then do m={[0X00]=0X1};end;do nl=2;end;do continue;end;else nl=0;do continue;end;end;until nl==2;local Y,I,V,Rl,k,i,u,d,E,X,A,r=nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil;for OZ=0,13 do if OZ<=6 then do if not(OZ<=0X2)then do if OZ<=4 then if OZ~=0X3 then Rl={};continue;else V=Yl;end;else if OZ~=0x05 then i=Il;else k=function()local UG,QG=1,nil;repeat if UG~=0x0 then do QG=F(Y,x,x);end;do UG=0;end;continue;else x=x+1;UG=2;end;until UG>0x001;return QG;end;end;end;end;else if not(OZ<=0X0)then if OZ==1 then continue;else Y=D(G(Y,0X00005),"..",function(nk)if F(nk,0X2)~=0X48 then local Ay=(nil);local iy=(0);repeat if iy==0 then Ay=g(L(nk,16));iy=1;continue;else if not(I)then return Ay;else local Bs=Z(Ay,I);I=xl;do return Bs;end;end;iy=0x002;end;until iy==0x00002;else local Yn=0;while true do if Yn==0 then I=L(G(nk,0X1,zl));do Yn=0X1;end;continue;else return"";end;end;end;end);end;else do Y=pl;end;do continue;end;end;end;end;else if OZ<=0x9 then if not(OZ<=7)then do if OZ~=0x8 then do local h6,j6=0X0,(nil);while(true)do do if h6==0 then j6=0X2;h6=0X00001;continue;else do for Et=0X1,31 do m[Et]=j6;do j6=j6*0X2;end;end;end;break;end;end;end;end;continue;else d=i-1;continue;end;end;else u=2^0x034;continue;end;elseif not(OZ<=11)then if OZ==0X0c then A=function()local N_,o_=V("<i8",Y,x);x=o_;return N_;end;else do r=string.match;end;end;else if OZ==10 then do E=kl;end;continue;else X=function()local MS,BS=V("<I4",Y,x);local HS=1;do while(true)do if HS==0 then do return MS;end;else x=BS;HS=0X0;continue;end;end;end;end;end;end;end;end;nl=1;local U,T,K,q,h,v=nil,nil,nil,nil,nil,(nil);do while nl<0x6 do if nl<=0X0002 then if nl<=0x0 then do h=sl;end;nl=3;else do if nl~=1 then T=il;nl=4;else U=Xl;do nl=2;end;end;end;end;else do if not(nl<=0X3)then if nl~=0x04 then do q=ul;end;nl=0;continue;else do K=al;end;nl=5;continue;end;else v=function()local t5=(0X0);local l5,w5=nil,nil;do repeat if not(t5<=0)then if t5==1 then x=w5;t5=0x2;else return l5;end;else l5,w5=V("<d",Y,x);t5=1;end;until(false);end;end;do nl=0X6;end;end;end;end;end;end;local M,l=nil,nil;do for nX=0,0X01 do if nX~=0 then l={[2]='\055\D\U\057\[[',[0]=2,[0X5]=0X6,[0x09]=0X4,[2]=0X7,[8]=0X6,[0X3]=4,[0]=0x00002,[1]=0X8,[6]=0x9};continue;else M=function()local F8=0X00;local v8=(0);while'\051\118\O\049'do local bx=F(Y,x,x);x=x+1;do F8=Q(F8,E(j(bx,127),v8));end;if j(bx,128)==0 then do return F8;end;end;v8=v8+0X7;end;end;end;end;end;local O=function()local b8=(nil);local J8=(1);repeat if J8<=0 then return b8;elseif J8==1 then b8=M();J8=0X2;else if not(b8>d)then else do return b8-a;end;end;J8=0;end;until(false);end;local B=k();local c=(k());local Sl=(function(Q0)local L0=0;local o0,g0,m0=nil,nil,nil;while L0<3 do if L0<=0X0 then do o0={F(Y,x,x+3)};end;do L0=2;end;continue;else if L0==1 then do m0=T(o0[0X2],c);end;L0=3;else g0=T(o0[1],c);L0=1;do continue;end;end;end;end;local i0=T(o0[3],c);local V0=(T(o0[4],c));c=(0X0075*c+Q0)%0x100;x=x+4;return V0*16777216+i0*65536+m0*256+g0;end);local C=setfenv;local tl=(function(H0)local s0,b0=nil,(nil);local j0=(1);repeat if not(j0<=0X1)then do if j0<=2 then return b0;elseif j0==3 then x=x+s0;j0=2;else b0=dl;j0=0x0;do continue;end;end;end;else if j0==0 then do for cu=0X1,s0,7997 do local nu,Bu=nil,nil;for qz=0X0,4 do if not(qz<=1)then if qz<=0X002 then Bu={F(Y,x+cu-0X00001,x+nu-0X1)};else do if qz==3 then for LP=zl,#Bu do Bu[LP]=T(Bu[LP],B);B=(H0*B+201)%0X100;end;continue;else do b0=b0..g(o(Bu));end;continue;end;end;end;else if qz~=0 then do if not(nu>s0)then else do nu=s0;end;end;end;continue;else nu=cu+7997-0x01;end;end;end;end;end;j0=3;else s0=X();j0=4;end;end;until false;end);do nl=0X6;end;local Jl,e,yl,Gl,Fl=nil,nil,nil,nil,(nil);while true do if not(nl<=3)then do if not(nl<=0X5)then if nl<=0x6 then Jl={};nl=2;continue;else if nl==7 then do nl=0;end;do continue;end;else Jl=xl;nl=0X5;continue;end;end;else if nl==0X4 then Rl[0X00001]=Jl;nl=8;else return yl(xl,z,Fl)(...);end;end;end;else if nl<=1 then if nl==0 then function yl(ha,ka,Ha)local ra=(Ha[0X07]);local Oa=Ha[0X0006];local qa=(Ha[9]);local xa=(Ha[4]);local Pa,za,ma,wa=Ha[0X5],Ha[0X8],Ha[0X1],Ha[0X3];local Ca=f({},{__mode="v"});local ya=(nil);ya=function(...)local OU=(1);local FU=p();local vU=(FU==z and ka or FU);local UU=({});local PU,TU=Ll(...);PU=PU-0x1;do for v8=0X000,PU do if Oa>v8 then(UU)[v8]=TU[v8+0x1];else do break;end;end;end;end;(Rl)[2]=Ha;Rl[3]=UU;do if not ma then TU=nil;else if wa then UU[Oa]={n=PU>=Oa and PU-Oa+1 or 0X0,o(TU,Oa+0x01,PU+1)};end;end;end;if vU~=FU then C(ya,vU);end;local GU=0;while-0X1fE6105B do local Kg=(ra[OU]);local ng=Kg[1];OU=OU+1;if not(ng>=44)then if ng>=22 then if ng>=0x021 then do if not(ng>=0X26)then if ng<0X023 then if ng==34 then UU[Kg[3]]=UU[Kg[0x0002]]%Kg[0X00006];else if Kg[5]==83 then OU=OU-1;(ra)[OU]={[0X00001]=41,[0X2]=(Kg[0X2]-249),[0x3]=(Kg[3]-249)};else local fG=(Kg[0X3]);for yx=fG,fG+(Kg[2]-1)do UU[yx]=TU[Oa+(yx-fG)+0X0001];end;end;end;else do if not(ng<36)then if ng==0X25 then do UU[Kg[0x3]]=UU[Kg[0X2]][Kg[6]];end;else local Ph=(Kg[0x3]);GU=Ph+Kg[0X2]-0X1;UU[Ph](o(UU,Ph+1,GU));GU=Ph-1;end;else local Bd=(Kg[0X3]);do GU=Bd+Kg[2]-1;end;do(UU)[Bd]=UU[Bd](o(UU,Bd+0x0001,GU));end;GU=Bd;end;end;end;else if ng>=41 then if not(ng>=0X00002a)then if Kg[5]==120 then OU=OU-0X1;ra[OU]={[3]=(Kg[0X3]-133),[2]=(Kg[0X2]-0X85),[0x00001]=0X32};elseif Kg[5]==107 then do OU=OU-1;end;(ra)[OU]={[0x3]=(Kg[3]-0x00a6),[1]=0X05,[2]=(Kg[2]-0X00A6)};elseif Kg[0X5]~=134 then repeat local hV,tV=Ca,(UU);do if#hV>0 then local F3=({});for hC,wC in K,hV do for hg,Ng in K,wC do if not(Ng[1]==tV and Ng[0x2]>=0x0)then else local a6=Ng[0X2];if not F3[a6]then(F3)[a6]={tV[a6]};end;Ng[1]=F3[a6];(Ng)[2]=1;end;end;end;end;end;until true;do return o(UU,Kg[3],GU);end;else do OU=OU-1;end;ra[OU]={[3]=(Kg[3]-14),[0X1]=0X53,[0X02]=(Kg[0X2]-0xE)};end;else if ng==0X2B then local m8=qa[Kg[2]];local k8,F8=m8[0x2],(nil);local M8=(#k8);do if not(M8>0X0)then else F8={};for AC=1,M8 do local ZC=(k8[AC]);if ZC[1]==0 then do F8[AC-1]={UU,ZC[2]};end;else do F8[AC-0X00001]=ha[ZC[0X2]];end;end;end;(w)(Ca,F8);end;end;UU[Kg[0X3]]=yl(F8,vU,m8);else do OU=Kg[2];end;end;end;else if ng>=0X27 then do if ng~=0X00028 then UU[Kg[3]][Kg[7]]=UU[Kg[5]];else do(UU)[Kg[0x0003]]=UU[Kg[0x2]]^UU[Kg[5]];end;end;end;else if not(UU[Kg[2]]<UU[Kg[5]])then OU=Kg[3];end;end;end;end;end;else if not(ng<0X1B)then if not(ng<30)then if not(ng<0X0001f)then if ng==32 then if Kg[0x5]~=0x0055 then local kJ,nJ=PU-Oa,(Kg[0X003]);if not(kJ<0)then else kJ=-1;end;do for nK=nJ,nJ+kJ do(UU)[nK]=TU[Oa+(nK-nJ)+0x1];end;end;GU=nJ+kJ;else do OU=OU-1;end;ra[OU]={[2]=(Kg[0X002]-0Xe5),[0X1]=58,[0X3]=(Kg[3]-229)};end;else(UU)[Kg[0X3]]=h(UU[Kg[2]],UU[Kg[0X5]]);end;else if UU[Kg[2]]~=Kg[0X6]then else do OU=Kg[0X3];end;end;end;else do if ng<28 then(UU)[Kg[3]]={o({},1,Kg[0x2])};else if ng==0X1D then UU[Kg[0X003]]=false;else do UU[Kg[0X3]]=true;end;end;end;end;end;else if ng<0x18 then if ng~=0X00017 then local ZZ=UU[Kg[0X2]]/UU[Kg[5]];do UU[Kg[0X3]]=ZZ-ZZ%0X1;end;else do repeat local gP,YP=Ca,UU;if not(#gP>0x0)then else local he=({});do for Bt,Pt in K,gP do for Yv,Hv in K,Pt do if not(Hv[0X01]==YP and Hv[2]>=0X00000)then else local GG=(Hv[2]);if not he[GG]then he[GG]={YP[GG]};end;do(Hv)[0x1]=he[GG];end;(Hv)[2]=1;end;end;end;end;end;until true;end;return UU[Kg[3]]();end;else if not(ng<0X19)then do if ng==0x1a then local BR,HR=Kg[0X3],Kg[2];local mR=(Kg[0x5]);if HR==0 then else GU=BR+HR-0X1;end;local uR,vR=nil,(nil);do if HR==0X1 then do uR,vR=Ll(UU[BR]());end;else uR,vR=Ll(UU[BR](o(UU,BR+1,GU)));end;end;if mR~=1 then if mR~=0 then do uR=BR+mR-2;end;GU=uR+0x1;else uR=uR+BR-1;GU=uR;end;local Qf=(0X00000);for hx=BR,uR do do Qf=Qf+0X1;end;do(UU)[hx]=vR[Qf];end;end;else GU=BR-1;end;else UU[Kg[0X3]]=UU[Kg[0x2]]+UU[Kg[0X0005]];end;end;else UU[Kg[3]]=UU[Kg[2]]<UU[Kg[5]];end;end;end;end;elseif ng>=0xb then do if not(ng<16)then do if ng>=19 then if not(ng<20)then if ng==0X15 then(UU)[Kg[0X3]]=UU[Kg[2]]~=UU[Kg[5]];else UU[Kg[3]]=UU[Kg[0X02]][UU[Kg[0X5]]];end;else local Pp=(Kg[0x3]);local tp,jp,Op=UU[Pp]();if tp then do UU[Pp+0X1]=jp;end;do UU[Pp+2]=Op;end;OU=Kg[0x2];end;end;else do if not(ng>=17)then local Ua=Kg[0x3];local Ma,Sa=UU[Ua]();do if not(Ma)then else do OU=Kg[0X2];end;UU[Ua+3]=Sa;end;end;else if ng~=0X12 then local eV=Kg[3];local zV,tV=UU[eV]();do if zV then(UU)[eV+1]=tV;OU=Kg[2];end;end;else do if Kg[5]~=0XC2 then if not UU[Kg[3]]then OU=Kg[0X002];end;else OU=OU-1;(ra)[OU]={[2]=(Kg[0X2]-247),[0X003]=(Kg[3]-247),[1]=5};end;end;end;end;end;end;end;else if ng<13 then if ng==12 then do UU[Kg[0X3]]=UU[Kg[2]]==UU[Kg[0X5]];end;else local Xi=(UU[Kg[0X02]]);local Fi=Kg[3];UU[Fi+0X1]=Xi;(UU)[Fi]=Xi[Kg[0X6]];end;else do if not(ng<14)then if ng~=15 then do(UU)[Kg[3]]=E(UU[Kg[0X00002]],UU[Kg[5]]);end;else local Ky=ha[Kg[0X0002]];(UU)[Kg[3]]=Ky[1][Ky[2]];end;else UU[Kg[3]]={};end;end;end;end;end;else do if ng>=0X5 then do if ng>=0X00008 then if ng>=9 then do if ng==0x0000a then UU[Kg[3]]=Q(UU[Kg[2]],UU[Kg[5]]);else if UU[Kg[0X2]]<UU[Kg[0X05]]then do OU=Kg[0X3];end;end;end;end;else do repeat local Fu,Lu,Au=Ca,UU,Kg[3];if not(#Fu>0)then else local Se=({});for MU,QU in K,Fu do for T0,G0 in K,QU do if not(G0[0X1]==Lu and G0[2]>=Au)then else local v7=G0[2];if not(not Se[v7])then else do Se[v7]={Lu[v7]};end;end;(G0)[0X1]=Se[v7];(G0)[0X2]=0x00001;end;end;end;end;until true;end;end;else if not(ng>=0X6)then if Kg[5]~=63 then(UU)[Kg[3]]=nil;else OU=OU-0X1;(ra)[OU]={[3]=(Kg[3]-184),[2]=(Kg[2]-184),[0x1]=83};end;else do if ng~=0X7 then if UU[Kg[2]]==UU[Kg[5]]then OU=Kg[3];end;else UU[Kg[3]]=-UU[Kg[2]];end;end;end;end;end;else if not(ng<0X2)then if not(ng<3)then if ng~=4 then local va=(Kg[0X02]);(UU)[Kg[3]]=UU[va]..UU[va+1];else local IT=(Kg[3]);local mT,GT,CT=UU[IT],UU[IT+0x1],UU[IT+0X0002];(UU)[IT]=N(function()do for us=mT,GT,CT do(b)(true,us);end;end;end);OU=Kg[0x2];end;else local n1=(Kg[3]);UU[n1](UU[n1+0X1],UU[n1+0x2]);GU=n1-1;end;else if ng==1 then(UU)[Kg[0X003]]=UU[Kg[0X2]]<=UU[Kg[0X0005]];else UU[Kg[3]]=UU[Kg[2]]/UU[Kg[5]];end;end;end;end;end;else if not(ng>=66)then if not(ng<0X0037)then if ng>=0X3c then if ng>=0X00003F then if ng<64 then do UU[Kg[3]]=UU[Kg[2]]~=Kg[0X6];end;else if ng~=0X41 then UU[Kg[0X0003]]=UU[Kg[2]]-UU[Kg[0X5]];else UU[Kg[3]][Kg[7]]=Kg[6];end;end;else if ng<61 then local OY=Kg[3];local vY=(N(function(...)b();for iv,lv,fv,Av,Zv,av,Lv,nv,ov,Kv in...do b(true,{iv,lv,fv,Av,Zv,av,Lv,nv,ov,Kv});end;end));(vY)(UU[OY],UU[OY+0X0001],UU[OY+2]);GU=OY;do(UU)[OY]=vY;end;do OU=Kg[0X2];end;else do if ng~=0X3e then(UU[Kg[3]])[UU[Kg[0X2]]]=UU[Kg[0X05]];else local d_=Kg[0x03];local o_=(N(function(...)b();for IA,CA in...do(b)(true,IA,CA);end;end));o_(UU[d_],UU[d_+1],UU[d_+2]);do GU=d_;end;(UU)[d_]=o_;OU=Kg[2];end;end;end;end;elseif not(ng>=0X39)then do if ng==56 then(UU)[Kg[3]]=T(UU[Kg[2]],UU[Kg[0x05]]);else local Hy=(Kg[3]);UU[Hy]=UU[Hy](UU[Hy+1]);do GU=Hy;end;end;end;else do if not(ng>=0X3a)then do(UU)[Kg[0x3]]=Rl[Kg[0x2]];end;else if ng==0X3B then UU[Kg[0X3]]=UU[Kg[2]]>UU[Kg[0X00005]];else do if Kg[0X00005]==15 then do OU=OU-1;end;(ra)[OU]={[0X02]=(Kg[2]-0X5),[3]=(Kg[3]-0X5),[0X00001]=7};elseif Kg[5]~=121 then repeat local nP,yP=Ca,(UU);if#nP>0X0 then local lm=({});for yA,lA in K,nP do for SL,oL in K,lA do if oL[0X1]==yP and oL[2]>=0x0 then local fJ=(oL[0X02]);if not lm[fJ]then lm[fJ]={yP[fJ]};end;(oL)[1]=lm[fJ];oL[2]=1;end;end;end;end;until true;return;else OU=OU-1;do ra[OU]={[1]=0X8,[2]=(Kg[2]-189),[3]=(Kg[0X3]-189)};end;end;end;end;end;end;end;else do if ng<49 then if ng<46 then if ng==0X0002d then if Kg[0X5]==0X8a then OU=OU-0X1;(ra)[OU]={[2]=(Kg[0X2]-101),[0x3]=(Kg[0X03]-0x0065),[1]=0X3a};elseif Kg[5]==0X9C then OU=OU-0X00001;(ra)[OU]={[0x0003]=(Kg[0X3]-0X070),[2]=(Kg[2]-0X70),[0X01]=0X00053};else for Dr=Kg[0X03],Kg[0x00002]do(UU)[Dr]=nil;end;end;elseif not(UU[Kg[0X0002]]<=UU[Kg[5]])then OU=Kg[3];end;else do if not(ng<0x002f)then if ng==48 then UU[Kg[3]]=vU[Kg[7]];else local vB=Kg[0X03];(UU[vB])(UU[vB+1]);GU=vB-0X1;end;else local vj=(Kg[3]);local fj=((Kg[5]-1)*0x32);local yj=UU[vj];for Wi=1,Kg[0X2]do yj[fj+Wi]=UU[vj+Wi];end;end;end;end;else if not(ng>=52)then if not(ng<50)then if ng~=0X33 then do UU[Kg[3]]=#UU[Kg[0X2]];end;else(vU)[Kg[0X7]]=UU[Kg[0x3]];end;else if UU[Kg[3]]then OU=Kg[0X002];end;end;elseif ng>=0X35 then if ng~=54 then do repeat local eV,hV=Ca,(UU);if not(#eV>0)then else local qn={};for pe,le in K,eV do for qS,MS in K,le do if MS[0X1]==hV and MS[0x2]>=0x0 then local cq=(MS[2]);if not qn[cq]then(qn)[cq]={hV[cq]};end;do(MS)[1]=qn[cq];end;MS[0x2]=1;end;end;end;end;until true;end;return UU[Kg[3]];else if not(UU[Kg[2]]<=UU[Kg[5]])then else do OU=Kg[3];end;end;end;else local CR=Kg[3];local iR=N(function(...)(b)();for Fu in...do(b)(true,Fu);end;end);(iR)(UU[CR],UU[CR+1],UU[CR+0X002]);do GU=CR;end;do UU[CR]=iR;end;OU=Kg[0X02];end;end;end;end;else if ng<0x04d then if ng<0X47 then if ng>=68 then if ng<69 then do GU=Kg[3];end;UU[GU]();do GU=GU-1;end;else if ng~=0X46 then UU[Kg[0X3]]=Kg[7];else local TE=(Kg[0X3]);UU[TE](o(UU,TE+1,GU));GU=TE-1;end;end;else if ng==67 then(UU)[Kg[3]]=UU[Kg[2]]>=UU[Kg[5]];else do repeat local Dd,Gd=Ca,UU;if#Dd>0 then local RH=({});for CI,yI in K,Dd do for rW,jW in K,yI do if not(jW[0x00001]==Gd and jW[0X002]>=0)then else local m2=(jW[2]);if not(not RH[m2])then else(RH)[m2]={Gd[m2]};end;(jW)[0X001]=RH[m2];(jW)[0X00002]=0X1;end;end;end;end;until true;end;local qx=(Kg[0X0003]);return o(UU,qx,qx+Kg[2]-2);end;end;else if not(ng>=74)then if not(ng>=72)then UU[Kg[3]]=UU[Kg[2]]%UU[Kg[0x0005]];else if ng==73 then if UU[Kg[0X002]]~=UU[Kg[0X5]]then OU=Kg[3];end;else local mB=(ha[Kg[2]]);(mB[0X1])[mB[0X00002]]=UU[Kg[3]];end;end;else if not(ng<75)then do if ng~=76 then repeat local HD,PD=Ca,(UU);if#HD>0 then local ga=({});for Rz,Gz in K,HD do for TK,cK in K,Gz do do if not(cK[1]==PD and cK[2]>=0)then else local DP=(cK[0X00002]);if not(not ga[DP])then else ga[DP]={PD[DP]};end;cK[1]=ga[DP];(cK)[0X2]=1;end;end;end;end;end;until true;local JK=Kg[3];return UU[JK](o(UU,JK+1,GU));else local Tg=(Kg[3]);do(UU)[Tg]=UU[Tg](UU[Tg+1],UU[Tg+2]);end;GU=Tg;end;end;else UU[Kg[0X3]]=UU[Kg[0X2]]*UU[Kg[0X005]];end;end;end;else if ng>=83 then if ng<86 then if ng>=84 then if ng~=0X55 then local pd,Ld=Kg[0X3],Kg[2];GU=pd+Ld-1;repeat local am,nm=Ca,(UU);if#am>0X0 then local PQ={};for Fp,Vp in K,am do for oT,yT in K,Vp do do if not(yT[0X1]==nm and yT[0x2]>=0X000)then else local MM=(yT[0X02]);do if not(not PQ[MM])then else do PQ[MM]={nm[MM]};end;end;end;do(yT)[0X01]=PQ[MM];end;yT[0x02]=0X1;end;end;end;end;end;until true;do return UU[pd](o(UU,pd+0X0001,GU));end;else local It=(Kg[0X00002]);local Zt=(UU[It]);for FE=It+1,Kg[0X05]do Zt=Zt..UU[FE];end;do(UU)[Kg[0x3]]=Zt;end;end;else UU[Kg[3]]=UU[Kg[0x002]];end;else if ng<87 then Rl[Kg[0x2]]=UU[Kg[3]];else if ng~=88 then local Pi=Kg[0X00003];local gi,Vi=UU[Pi],((Kg[5]-1)*0X32);for pU=1,GU-Pi do(gi)[Vi+pU]=UU[Pi+pU];end;else UU[Kg[0X3]][UU[Kg[2]]]=Kg[6];end;end;end;else if not(ng>=80)then if ng>=78 then if ng~=79 then local A1=(Kg[3]);local f1,G1=UU[A1]();if not(f1)then else for ll=1,Kg[0X00005]do(UU)[A1+ll]=G1[ll];end;OU=Kg[0X0002];end;else local dF=(Kg[0x00003]);do(UU)[dF]=UU[dF](o(UU,dF+0X01,GU));end;do GU=dF;end;end;else do UU[Kg[3]]=q(UU[Kg[2]]);end;end;else if ng<0x0051 then if UU[Kg[2]]~=Kg[0X6]then do OU=Kg[3];end;end;else if ng==0X000052 then UU[Kg[3]]=not UU[Kg[2]];else if not(UU[Kg[0X2]]<=Kg[6])then OU=Kg[0X3];end;end;end;end;end;end;end;end;end;end;C(ya,ka);return ya;end;nl=3;else do Fl=Gl();end;nl=0X4;end;else do if nl==0X00002 then do e=function(rY,RY,QY)local CY=((rY/m[RY])%m[QY]);CY=CY-CY%0X1;return CY;end;end;nl=0X7;else function Gl()local Im,om,mm,um=2,nil,nil,nil;repeat if Im<=1 then if Im~=0x0 then mm={nil,nil,nil,xl,xl,xl,{},{},{}};do Im=0x00004;end;else mm[10]=k();do Im=0X005;end;continue;end;else if Im<=0X02 then om={};Im=1;else if Im~=3 then do um=1;end;Im=3;else do(mm)[0X5]=M();end;Im=0X00;end;end;end;until Im>0X04;Im=0;local Xm,Cm=nil,(nil);do while true do if Im~=0 then Cm=k();break;else do Xm={};end;Im=0X1;end;end;end;do mm[zl]=e(Cm,0X1,0X1)~=0X0;end;local Rm=(nil);local Km=({});do for H7=0,6 do if not(H7<=2)then if H7<=0x4 then if H7~=3 then do for jr=1,M()do Km[jr]={k(),M()};end;end;else mm[0x2]=Km;continue;end;else if H7~=5 then do Rm=X()-0X8593;end;do continue;end;else mm[12]=X();continue;end;end;else if not(H7<=0X0)then if H7==1 then(mm)[16]=X();continue;else do mm[18]=k();end;end;else(mm)[0X3]=e(Cm,2,1)~=0;end;end;end;end;local Jm=mm[0X07];do Im=0X7;end;local Wm,Sm,xm,tm=nil,nil,nil,(nil);while Im<0X008 do do if Im<=3 then if Im<=1 then if Im~=0X0 then xm=k()~=0;do Im=6;end;else do Sm=k();end;Im=0x01;continue;end;else do if Im~=2 then mm[0X0d]=k();do Im=0X2;end;else tm=X()-0X12561;do Im=8;end;continue;end;end;end;else if not(Im<=0x005)then if Im==6 then do for Yz=1,Wm do local Jz=xl;local Rz=k();local dz=nil;do for xA=0,0x0002 do if not(xA<=0X0000)then do if xA==0X1 then do if Rz==126 then Jz=G(tl(Sm),v()+X());elseif Rz==0X69 then Jz=el;elseif Rz==50 then Jz=v()+X();elseif Rz==123 then do Jz=v();end;elseif Rz==131 then Jz=v();elseif Rz==0X00006 then Jz=G(tl(Sm),6);elseif Rz==200 then Jz=G(tl(Sm),v()+X());elseif Rz==180 then Jz=false;elseif Rz==0X0000a9 then do Jz=G(tl(Sm),k());end;elseif Rz~=173 then else Jz=A();end;end;continue;else dz={Jz,{}};continue;end;end;else do om[Yz-1]=um;end;continue;end;end;end;local Uz=(1);while(true)do if Uz<=0X0 then if not(xm)then else local Ht=0X0;repeat do if Ht~=0 then do Pl=Pl+0X1;end;Ht=0x2;continue;else Jl[Pl]=dz;do Ht=1;end;end;end;until Ht>=2;end;break;else if Uz==0X00001 then Xm[um]=dz;Uz=0X002;else um=um+0X1;Uz=0;end;end;end;end;end;Im=3;continue;else do for Ex=1,Rm do Jm[Ex]={[6]=0.7502999323623311,[1]=M(),[0X6]=false,[2]=0.6659409759863945,[0x7]=k(),[ml]=k(),[5]=0.39178795812701317,[4]=k(),[5]=O(),[2]=O(),[0X00003]=O()};end;end;do Im=0x05;end;end;else if Im~=4 then mm[0Xe]=X();do Im=0X4;end;continue;else do Wm=X()-91343;end;do Im=0;end;end;end;end;end;end;local vm=(mm[9]);for Lg=0X000,0X00003 do do if not(Lg<=1)then if Lg~=0x02 then do for W_=1,Rm do local D_,m_=0X001,nil;repeat if D_~=0x00000 then m_=mm[0X07][W_];D_=0X0;continue;else for bh,Ch in ipairs(W)do local Hh=(l[Ch]);local qh=(m_[Hh]);if qh==0Xb then local PG,GG=nil,(nil);local tG=0x2;do while(true)do if tG<=0x00 then if GG then local Bd=(nil);for hl=0,0X02 do if hl<=0 then(m_)[Hh]=GG[0X1];do continue;end;else if hl==0X0001 then Bd=GG[0x2];else(Bd)[#Bd+1]={m_,Hh};continue;end;end;end;end;break;else if tG~=1 then PG=om[m_[Ch]];tG=0X1;do continue;end;else GG=Xm[PG];tG=0x0000;end;end;end;end;elseif qh~=0xE then else(m_)[Ch]=W_+m_[Ch]+1;end;end;break;end;until(false);end;end;else do(mm)[4]=M();end;do continue;end;end;else if Lg~=0X0 then mm[0X0006]=M();else for SV=0x0,tm-1 do(vm)[SV]=Gl();end;end;end;end;end;return mm;end;nl=0X00001;continue;end;end;end;end;end;end)("",tostring,0x001,nil,bit32.bxorcoroutine.yield,string.unpack,0X6,table.insert,rawget,error,string.gsub,string.byte,rawset,string.rep,2147483648,bit32.bor,type,true,getfenv,'#',coroutine.wrap,bit32.bnot,bit32.rshift,next,bit32.lshift,assert,...);
